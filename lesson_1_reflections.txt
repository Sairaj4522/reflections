How did viewing a diff between two versions of a file help you see the bug that was introduced?

	Diff was quite helpful rather than manually reading each file line by line and comparing them.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	By having a history of changes, if a crash happening in current version one can easily go back
	in history of the file and make changes accordingly.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

	pros:

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

	Since version control systems like Git are made with coding in view, so for a certain addition of a new feature many files would be changed so having them in one commit will be helpful later comparing the changes later on, where as vcs like Google docs, really cares about individual files such as word proccessor file for eg. doc, ppt, etc

How can you use the commands git log and git diff to view the history of files?

	First open terminal cd into the repository directory and say git log
	just press up and down button to scroll the whole log
	When you find commits you wanna compare copy the git hash of the two and issue command
	git diff git_hash1 git_hash2

How might using version control make you more confident to make changes that could break something?

	Once one have started using tools which enables him/her something like version control, the user will be used to the power of this method that allows easy debugging of the code at any point of time/commit.

Now that you have your workspace set up, what do you want to try using Git for?

	Version control, coding and other stuff, to embark a journey to becoming a good software developer.

